
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      // Allow access if the user is authenticated at all.
      // For more security, you could use custom claims: request.auth.token.admin == true
      return request.auth != null;
    }
  
    // Rules for election rooms
    match /electionRooms/{roomId} {
      // Anyone can read a room's details to join it.
      // This is necessary for pages like /vote/[roomId] to load title/description.
      allow read: if true; 
      
      // Only authenticated admins can create, update, or delete rooms.
      allow write: if isAdmin();

      // Rules for subcollections
      match /{subcollection}/{docId} {
        // Any authenticated user can create documents in subcollections (e.g., cast a vote)
        allow create: if request.auth != null;

        // Admins can read/write/delete anything in subcollections (e.g., view voter lists)
        allow read, write, delete: if isAdmin();
      }
    }
    
    // Catch-all to deny any other access.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
