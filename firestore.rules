rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is an admin (i.e., authenticated).
    // In this app's security model, any authenticated user is an admin.
    function isAdmin() {
      return request.auth != null;
    }

    // Rules for the electionRooms collection
    match /electionRooms/{roomId} {
      // ANYONE can read a single room's main document (title, description, etc.).
      // This is required for voters to see the election details before voting.
      allow get: if true;

      // ONLY ADMINS can list/query multiple rooms, create, update, or delete them.
      allow list, create, update, delete: if isAdmin();

      // Rules for the 'voters' subcollection (contains voter emails)
      match /voters/{userId} {
        // ANYONE can check for the existence of their own voter record.
        // This is necessary to prevent double voting.
        allow get: if true;
        
        // ONLY ADMINS can list all voters in a room.
        allow list, create, update, delete: if isAdmin();
      }

      // Rules for the 'votes' subcollection (contains individual vote records)
      match /votes/{voteId} {
        // ANYONE can create a new vote record. This is the core of casting a vote.
        allow create: if true;

        // ONLY ADMINS can read the vote records to tally results.
        allow get, list: if isAdmin();
        
        // NO ONE can update or delete a vote once it's cast.
        allow update, delete: if false;
      }
    }
  }
}
