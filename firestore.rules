rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is authenticated.
    // This is the simplest form of "admin" check for this app's structure.
    function isAuthed() {
      return request.auth != null;
    }

    // Rules for the main collection of election rooms.
    match /electionRooms/{roomId} {
      // ANY authenticated user (an admin) can create, view, update, or delete an election room document.
      allow read, write: if isAuthed();

      // PUBLIC ACCESS RULES:
      // Allow ANYONE (including anonymous users) to read a single election room document.
      // This is necessary for the public voting pages to load the election title and description.
      // It's secure because sensitive data is not stored on the room document itself.
      allow get: if true;

      // Rules for the 'voters' subcollection, which tracks who has voted.
      match /voters/{userId} {
        // ANY authenticated user (an admin) can read the list of voters.
        allow read: if isAuthed();
        
        // ANYONE (including anonymous users) can create their own voter record.
        // This is how a vote is registered and prevents double-voting.
        allow create: if true;
      }
      
      // Rules for the 'votes' subcollection, which stores individual ballots.
      match /votes/{voteId} {
        // ANY authenticated user (an admin) can read the votes to tally results.
        allow read: if isAuthed();

        // ANYONE (including anonymous users) can create a vote document.
        allow create: if true;
      }
    }
  }
}
