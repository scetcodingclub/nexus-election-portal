
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isRoomActive(roomId) {
      return get(/databases/$(database)/documents/electionRooms/$(roomId)).data.status == 'active';
    }

    function isVoterNotCompleted(roomId, voterEmail) {
      return !exists(/databases/$(database)/documents/electionRooms/$(roomId)/voters/$(voterEmail)) || 
             get(/databases/$(database)/documents/electionRooms/$(roomId)/voters/$(voterEmail)).data.status != 'completed';
    }

    // Admins have full access to their data
    // This assumes admins are authenticated via Firebase Auth
    match /electionRooms/{roomId} {
      allow read, write: if request.auth != null;

      // Rules for unauthenticated participants (voters/reviewers)
      
      // Allow anyone to read the details of a specific room if they know the ID.
      // This is needed for the voting/review page to fetch room data.
      allow get: if true; 

      // Anyone can create a "voter" document for themselves, but can't read others' docs.
      match /voters/{voterEmail} {
        allow read: if false; // Deny reading the voter list
        allow write: if isRoomActive(roomId) && isVoterNotCompleted(roomId, voterEmail);
      }
      
      // Allow creating votes, but not reading or updating them.
      // This ensures anonymity.
      match /votes/{voteId} {
        allow read, update, delete: if false;
        allow create: if isRoomActive(roomId) && isVoterNotCompleted(roomId, request.resource.data.voterEmail);
      }
      
      // Allow creating reviews, but not reading or updating them.
      match /reviews/{reviewId} {
        allow read, update, delete: if false;
        allow create: if isRoomActive(roomId) && isVoterNotCompleted(roomId, request.resource.data.reviewerEmail);
      }
    }
    
  }
}
