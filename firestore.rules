
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin authentication
    function isAdmin() {
      return request.auth != null;
    }

    // Rules for the electionRooms collection
    match /electionRooms/{roomId} {
      // Admins can perform any action on election rooms.
      allow read, write: if isAdmin();
      
      // Public users can only read a specific room's data.
      allow get: if !isAdmin();

      // Rules for the 'voters' subcollection
      match /voters/{voterId} {
        // Admins can read the full list of voters and their status.
        allow list, get: if isAdmin();
        
        // Public users can create or update their own voter status document.
        // This is necessary for tracking "in_room" and "completed" statuses.
        // Anyone can write, but they can only write to a specific document.
        // The service logic must prevent overwriting 'completed' status.
        allow create, update: if !isAdmin();
        
        // Deny all other actions for safety.
        allow read, delete: if false;
      }
      
      // Rules for the 'votes' subcollection
      match /votes/{voteId} {
        // Admins can read vote data for tallying results.
        allow list, get: if isAdmin();
        
        // Public users can create a new vote document.
        allow create: if !isAdmin();
        
        // Deny public read/update/delete to ensure anonymity.
        allow read, update, delete: if false;
      }

      // Rules for the 'reviews' subcollection
      match /reviews/{reviewId} {
        // Admins can read reviews.
        allow list, get: if isAdmin();
        
        // Public users can create a new review document.
        allow create: if !isAdmin();
        
        // Deny public read/update/delete to ensure anonymity.
        allow read, update, delete: if false;
      }
    }
  }
}
